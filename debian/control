Source: python-diskimage-builder
Section: python
Priority: optional
Maintainer: PKG OpenStack <openstack-devel@lists.alioth.debian.org>
Uploaders: Thomas Goirand <zigo@debian.org>,
Build-Depends: debhelper (>= 9),
               dh-python,
               openstack-pkg-tools,
               python-all,
               python3-all,
               python-setuptools,
               python-sphinx,
Build-Depends-Indep: python-babel (>= 1.3),
                     python-coverage (>= 3.6),
                     python-dib-utils,
                     python-fixtures,
                     python-hacking (>= 0.8),
                     python-subunit (>= 0.0.18),
                     python-oslosphinx (>= 2.5.0),
                     python3-subunit (>= 0.0.18),
                     python-testtools (>= 0.9.34),
                     python3-testtools (>= 0.9.34),
                     testrepository,
                     subunit,
Standards-Version: 3.9.5
Vcs-Browser: http://git.gplhost.com/gitweb/?p=openstack/python-diskimage-builder.git
Vcs-Git: http://git.gplhost.com/openstack/python-diskimage-builder.git
Homepage: https://git.openstack.org/cgit/openstack/diskimage-builder

Package: python-diskimage-builder
Architecture: all
Pre-Depends: dpkg (>= 1.15.6~)
Depends: python-babel (>= 1.3),
         python-dib-utils,
         ${misc:Depends},
         ${python:Depends},
         kpartx,
         qemu-utils,
         debootstrap,
Recommends: ${python:Recommends}
Description: image building tools for Openstack
 Diskimage-builder tools are the components of TripleO that are responsible for
 building disk images. It has the core functionality for building disk images,
 filesystem images and ramdisk images for use with OpenStack (both virtual and
 bare metal). The core functionality includes the various operating system
 specific modules for disk/filesystem images, and deployment and hardware
 inventory ramdisks.
 .
 The TripleO project also develops elements that can be used to deploy
 OpenStack itself. While users and operators can manually script or put
 together ram disks and disk images, mature automation makes customisation and
 testing easier.
